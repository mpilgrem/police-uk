-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/


-- | Haskell bindings to the UK Home Office's Police API
@package police-uk
@version 0.1.0.0


-- | This module exports a type representing months in the Gregorian
--   calendar (<a>YearMonth</a>) and associated functions.
module Data.Time.Calendar.YearMonth

-- | Type representing months in the Gregorian calander.
newtype YearMonth
YearMonth :: (Integer, Int) -> YearMonth

-- | Returns the specific month in which the given date falls.
toYearMonth :: Day -> YearMonth

-- | Returns a date for the specifc month, given the day of the month.
fromYearMonth :: Int -> YearMonth -> Day
instance GHC.Classes.Ord Data.Time.Calendar.YearMonth.YearMonth
instance GHC.Classes.Eq Data.Time.Calendar.YearMonth.YearMonth
instance GHC.Show.Show Data.Time.Calendar.YearMonth.YearMonth
instance Web.Internal.HttpApiData.ToHttpApiData Data.Time.Calendar.YearMonth.YearMonth
instance Data.Aeson.Types.FromJSON.FromJSON Data.Time.Calendar.YearMonth.YearMonth


-- | This module exports a type used to represent crime categories used by
--   the UK Home Office's Police API (<a>CrimesCategory</a>).
module Web.UK.Police.Types.CrimesCategory

-- | Type representing crimes categories.
data CrimesCategory
AllCrime :: CrimesCategory
AntiSocialBehaviour :: CrimesCategory
BicycleTheft :: CrimesCategory
Burglary :: CrimesCategory
CriminalDamageArson :: CrimesCategory
Drugs :: CrimesCategory
OtherTheft :: CrimesCategory
PossessionOfWeapons :: CrimesCategory
PublicOrder :: CrimesCategory
Robbery :: CrimesCategory
Shoplifting :: CrimesCategory
TheftFromThePerson :: CrimesCategory
VehicleCrime :: CrimesCategory
ViolentCrime :: CrimesCategory
ViolenceAndSexualOffences :: CrimesCategory
OtherCrime :: CrimesCategory
UnknownCrimesCategory :: Text -> CrimesCategory
instance GHC.Classes.Eq Web.UK.Police.Types.CrimesCategory.CrimesCategory
instance GHC.Show.Show Web.UK.Police.Types.CrimesCategory.CrimesCategory
instance Web.Internal.HttpApiData.ToHttpApiData Web.UK.Police.Types.CrimesCategory.CrimesCategory
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.CrimesCategory.CrimesCategory


-- | This module exports a type representing territorial police forces in
--   England and Wales (<a>EWTForce</a>).
module Web.UK.Police.Types.EWTForce

-- | Type representing territorial police forces in England and Wales.
--   There is a nullary data constructor for each of the 43 territorial
--   police forces.
data EWTForce
AvonAndSomerset :: EWTForce
Bedfordshire :: EWTForce
Cambridgeshire :: EWTForce
Cheshire :: EWTForce
CityOfLondon :: EWTForce
Cleveland :: EWTForce
Cumbria :: EWTForce
Derbyshire :: EWTForce
DevonAndCornwall :: EWTForce
Dorset :: EWTForce
Durham :: EWTForce
DyfedPowys :: EWTForce
Essex :: EWTForce
Gloucestershire :: EWTForce
GreaterManchester :: EWTForce
Gwent :: EWTForce
Hampshire :: EWTForce
Hertfordshire :: EWTForce
Humberside :: EWTForce
Kent :: EWTForce
Lancashire :: EWTForce
Leicestershire :: EWTForce
Lincolnshire :: EWTForce
Merseyside :: EWTForce
Metropolitan :: EWTForce
Norfolk :: EWTForce
NorthWales :: EWTForce
NorthYorkshire :: EWTForce
Northamptonshire :: EWTForce
Northumbria :: EWTForce
Nottinghamshire :: EWTForce
SouthWales :: EWTForce
SouthYorkshire :: EWTForce
Staffordshire :: EWTForce
Suffolk :: EWTForce
Surrey :: EWTForce
Sussex :: EWTForce
ThamesValley :: EWTForce
Warwickshire :: EWTForce
WestMercia :: EWTForce
WestMidlands :: EWTForce
WestYorkshire :: EWTForce
Wiltshire :: EWTForce
instance GHC.Classes.Eq Web.UK.Police.Types.EWTForce.EWTForce
instance GHC.Show.Show Web.UK.Police.Types.EWTForce.EWTForce
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.EWTForce.EWTForce
instance Web.Internal.HttpApiData.ToHttpApiData Web.UK.Police.Types.EWTForce.EWTForce


-- | This module exports a type used to represent categories for the
--   outcome of crime reports used by the UK Home Office's Police API
--   (<a>OutcomeCategory</a>).
module Web.UK.Police.Types.OutcomeCategory

-- | Type representing categories of outcomes for reported crimes.
data OutcomeCategory
AwaitingCourtResult :: OutcomeCategory
CourtResultUnavailable :: OutcomeCategory
UnableToProceed :: OutcomeCategory
LocalResolution :: OutcomeCategory
NoFurtherAction :: OutcomeCategory
DeprivedOfProperty :: OutcomeCategory
Fined :: OutcomeCategory
AbsoluteDischarge :: OutcomeCategory
Cautioned :: OutcomeCategory
DrugsPossessionWarning :: OutcomeCategory
PenaltyNoticeIssued :: OutcomeCategory
CommunityPenalty :: OutcomeCategory
ConditionalDischarge :: OutcomeCategory
SuspendedSentence :: OutcomeCategory
Imprisoned :: OutcomeCategory
OtherCourtDisposal :: OutcomeCategory
Compensation :: OutcomeCategory
SentencedInAnotherCase :: OutcomeCategory
Charged :: OutcomeCategory
NotGuilty :: OutcomeCategory
SentToCrownCourt :: OutcomeCategory
UnableToProsecute :: OutcomeCategory
FormalActionNotInPublicInterest :: OutcomeCategory
ActionTakenByAnotherOrganisation :: OutcomeCategory
FurtherInvestigationNotInPublicInterest :: OutcomeCategory
FurtherActionNotInPublicInterest :: OutcomeCategory
UnderInvestigation :: OutcomeCategory
StatusUpdateUnavailable :: OutcomeCategory
instance GHC.Classes.Eq Web.UK.Police.Types.OutcomeCategory.OutcomeCategory
instance GHC.Show.Show Web.UK.Police.Types.OutcomeCategory.OutcomeCategory
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.OutcomeCategory.OutcomeCategory


-- | This module exports a type used to represent the UK Home Office's
--   Police API (<a>UKPoliceAPI</a>) and other types used to represent
--   values for querying, and obtaining information from, that API.
module Web.UK.Police.Types

-- | Type representing the UK Home Office's Police API.
type UKPoliceAPI = "crimes-street-dates" :> Get '[JSON] DataAvailabilityResponse :<|> "forces" :> Get '[JSON] ForcesResponse :<|> "forces" :> Capture "force" TForce :> Get '[JSON] ForceResponse :<|> "forces" :> Capture "force" TForce :> "people" :> Get '[JSON] SeniorOfficersResponse :<|> "crimes-street" :> Capture "crime-category" CrimesCategory :> QueryParam "lat" Double :> QueryParam "lng" Double :> QueryParam "poly" Poly :> QueryParam "date" YearMonth :> Get '[JSON] CrimesStreetResponse :<|> "outcomes-at-location" :> QueryParam "location_id" LocationId :> QueryParam "lat" Double :> QueryParam "lng" Double :> QueryParam "poly" Poly :> QueryParam "date" YearMonth :> Get '[JSON] OutcomesAtLocationResponse :<|> "crimes-at-location" :> QueryParam "location_id" LocationId :> QueryParam "lat" Double :> QueryParam "lng" Double :> QueryParam "date" YearMonth :> Get '[JSON] CrimesAtLocationResponse :<|> "crimes-no-location" :> QueryParam "category" CrimesCategory :> QueryParam "force" Force :> QueryParam "date" YearMonth :> Get '[JSON] CrimesNoLocationResponse :<|> "crime-categories" :> QueryParam "date" YearMonth :> Get '[JSON] CrimesCategoriesResponse :<|> "crime-last-updated" :> Get '[JSON] CrimeLastUpdatedResponse :<|> "outcomes-for-crime" :> Capture "peristent_id" PersistentId :> Get '[JSON] OutcomesForCrimeResponse :<|> Capture "force" TForce :> "neighbourhoods" :> Get '[JSON] NeighbourhoodsResponse :<|> Capture "force" TForce :> Capture "neighbourhood_id" NeighbourhoodId :> Get '[JSON] NeighbourhoodResponse :<|> Capture "force" TForce :> Capture "neighbourhood_id" NeighbourhoodId :> "boundary" :> Get '[JSON] BoundaryResponse :<|> Capture "force" TForce :> Capture "neighbourhood_id" NeighbourhoodId :> "people" :> Get '[JSON] PeopleResponse :<|> Capture "force" TForce :> Capture "neighbourhood_id" NeighbourhoodId :> "events" :> Get '[JSON] EventsResponse :<|> Capture "force" TForce :> Capture "neighbourhood_id" NeighbourhoodId :> "priorities" :> Get '[JSON] PrioritiesResponse :<|> "locate-neighbourhood" :> QueryParam "q" LatLng :> Get '[JSON] LocateNeighbourhoodResponse :<|> "stops-street" :> QueryParam "lat" Double :> QueryParam "lng" Double :> QueryParam "poly" Poly :> QueryParam "date" YearMonth :> Get '[JSON] StopsStreetResponse :<|> "stops-at-location" :> QueryParam "location_id" LocationId :> QueryParam "date" YearMonth :> Get '[JSON] StopsAtLocationResponse :<|> "stops-no-location" :> QueryParam "force" Force :> QueryParam "date" YearMonth :> Get '[JSON] StopsNoLocationResponse :<|> "stops-force" :> QueryParam "force" Force :> QueryParam "date" YearMonth :> Get '[JSON] StopsForceResponse

-- | Type representing the response to an end point of the API.
newtype DataAvailabilityResponse
DataAvailabilityResponse :: [DataAvailability] -> DataAvailabilityResponse

-- | Type representing the response to an end point of the API.
newtype CrimeLastUpdatedResponse
CrimeLastUpdatedResponse :: CrimeLastUpdated -> CrimeLastUpdatedResponse

-- | Type representing the response to an end point of the API.
newtype ForcesResponse
ForcesResponse :: [ForceId] -> ForcesResponse

-- | Type representing the response to an end point of the API.
newtype ForceResponse
ForceResponse :: ForceDescription -> ForceResponse

-- | Type representing the response to an end point of the API.
newtype SeniorOfficersResponse
SeniorOfficersResponse :: [Person] -> SeniorOfficersResponse

-- | Type representing the response to an end point of the API.
newtype NeighbourhoodsResponse
NeighbourhoodsResponse :: [Neighbourhood] -> NeighbourhoodsResponse

-- | Type representing the response to an end point of the API.
data NeighbourhoodResponse
NeighbourhoodResponse :: Neighbourhood -> NeighbourhoodDescription -> Maybe ContactDetails -> NeighbourhoodResponse

-- | Type representing the response to an end point of the API.
newtype BoundaryResponse
BoundaryResponse :: [LatLng] -> BoundaryResponse

-- | Type representing the response to an end point of the API.
newtype PeopleResponse
PeopleResponse :: [Person] -> PeopleResponse

-- | Type representing the response to an end point of the API.
newtype EventsResponse
EventsResponse :: [Event] -> EventsResponse

-- | Type representing the response to an end point of the API.
newtype PrioritiesResponse
PrioritiesResponse :: [Priority] -> PrioritiesResponse

-- | Type representing the response to an end point of the API.
data LocateNeighbourhoodResponse
LocateNeighbourhoodResponse :: Force -> NeighbourhoodId -> LocateNeighbourhoodResponse

-- | Type representing the response to an end point of the API.
newtype CrimesCategoriesResponse
CrimesCategoriesResponse :: [CrimesCategoryDescription] -> CrimesCategoriesResponse

-- | Type representing the response to an end point of the API.
newtype CrimesStreetResponse
CrimesStreetResponse :: [CrimesStreet] -> CrimesStreetResponse

-- | Type representing the response to an end point of the API.
newtype CrimesAtLocationResponse
CrimesAtLocationResponse :: [CrimesStreet] -> CrimesAtLocationResponse

-- | Type representing the response to an end point of the API.
newtype CrimesNoLocationResponse
CrimesNoLocationResponse :: [CrimesStreet] -> CrimesNoLocationResponse

-- | Type representing the response to an end point of the API.
newtype OutcomesAtLocationResponse
OutcomesAtLocationResponse :: [OutcomeAtLocation] -> OutcomesAtLocationResponse

-- | Type representing the response to an end point of the API.
data OutcomesForCrimeResponse
OutcomesForCrimeResponse :: Crime -> [Outcome] -> OutcomesForCrimeResponse

-- | Type representing the response to an end point of the API.
newtype StopsStreetResponse
StopsStreetResponse :: [Stop] -> StopsStreetResponse

-- | Type representing the response to an end point of the API.
newtype StopsAtLocationResponse
StopsAtLocationResponse :: [Stop] -> StopsAtLocationResponse

-- | Type representing the response to an end point of the API.
newtype StopsNoLocationResponse
StopsNoLocationResponse :: [Stop] -> StopsNoLocationResponse

-- | Type representing the response to an end point of the API.
newtype StopsForceResponse
StopsForceResponse :: [Stop] -> StopsForceResponse

-- | Type representing months in the Gregorian calander.
newtype YearMonth
YearMonth :: (Integer, Int) -> YearMonth

-- | Type representing areas used to obtain crime reports
data CrimeArea

-- | Centre of a circle of radius 1 mile
CrimeCentre :: LatLng -> CrimeArea

-- | Custom area
CrimePoly :: Poly -> CrimeArea

-- | Type representing location used to obtain crime reports
data CrimeLocation
CrimeLocation :: LocationId -> CrimeLocation
CrimeLatLng :: LatLng -> CrimeLocation

-- | Type representing latitude and longitude coordinates
data LatLng
LatLng :: Double -> Double -> LatLng
[lat] :: LatLng -> Double
[lng] :: LatLng -> Double

-- | Type representing boundaries of regions
newtype Poly
Poly :: [LatLng] -> Poly

-- | Type representing identifiers for anonymised locations
newtype LocationId
LocationId :: Int -> LocationId

-- | Type representing types of locations.
data LocationType
LTForce :: LocationType
LTBTP :: LocationType
UnknownLocationType :: Text -> LocationType

-- | Type representing streets
data Street
Street :: LocationId -> Text -> Street
[streetId] :: Street -> LocationId
[streetName] :: Street -> Text

-- | Type representating streets and their locations
data StreetLocation
StreetLocation :: LatLng -> Street -> StreetLocation
[slLatLng] :: StreetLocation -> LatLng
[slStreet] :: StreetLocation -> Street

-- | Type representing locations of police.
data ForceLocation
ForceLocation :: Text -> Text -> Maybe Text -> Maybe LatLng -> Text -> Text -> ForceLocation
[flName] :: ForceLocation -> Text
[flType] :: ForceLocation -> Text
[flDescription] :: ForceLocation -> Maybe Text
[flLocation] :: ForceLocation -> Maybe LatLng
[flAddress] :: ForceLocation -> Text
[flPostcode] :: ForceLocation -> Text

-- | Type representing participating UK police forces
data Force

-- | Territorial police force
TF :: TForce -> Force

-- | British Transport Police
BTP :: Force

-- | Type representing participating UK territorial police forces
data TForce

-- | Territorial police force in England and Wales
EW :: EWTForce -> TForce

-- | Police Service of Northern Ireland
NorthernIreland :: TForce

-- | Type representing territorial police forces in England and Wales.
--   There is a nullary data constructor for each of the 43 territorial
--   police forces.
data EWTForce
AvonAndSomerset :: EWTForce
Bedfordshire :: EWTForce
Cambridgeshire :: EWTForce
Cheshire :: EWTForce
CityOfLondon :: EWTForce
Cleveland :: EWTForce
Cumbria :: EWTForce
Derbyshire :: EWTForce
DevonAndCornwall :: EWTForce
Dorset :: EWTForce
Durham :: EWTForce
DyfedPowys :: EWTForce
Essex :: EWTForce
Gloucestershire :: EWTForce
GreaterManchester :: EWTForce
Gwent :: EWTForce
Hampshire :: EWTForce
Hertfordshire :: EWTForce
Humberside :: EWTForce
Kent :: EWTForce
Lancashire :: EWTForce
Leicestershire :: EWTForce
Lincolnshire :: EWTForce
Merseyside :: EWTForce
Metropolitan :: EWTForce
Norfolk :: EWTForce
NorthWales :: EWTForce
NorthYorkshire :: EWTForce
Northamptonshire :: EWTForce
Northumbria :: EWTForce
Nottinghamshire :: EWTForce
SouthWales :: EWTForce
SouthYorkshire :: EWTForce
Staffordshire :: EWTForce
Suffolk :: EWTForce
Surrey :: EWTForce
Sussex :: EWTForce
ThamesValley :: EWTForce
Warwickshire :: EWTForce
WestMercia :: EWTForce
WestMidlands :: EWTForce
WestYorkshire :: EWTForce
Wiltshire :: EWTForce

-- | Type representing identifiers and associated names of police forces.
data ForceId
ForceId :: Force -> Text -> ForceId
[forceId] :: ForceId -> Force
[forceName] :: ForceId -> Text

-- | Type representing descriptions of police forces.
data ForceDescription
ForceDescription :: Force -> Text -> Maybe Text -> Text -> Text -> Maybe [EngagementMethod] -> ForceDescription
[fdId] :: ForceDescription -> Force
[fdName] :: ForceDescription -> Text
[fdDescription] :: ForceDescription -> Maybe Text
[fdUrl] :: ForceDescription -> Text
[fdTelephone] :: ForceDescription -> Text
[fdEngagementMethods] :: ForceDescription -> Maybe [EngagementMethod]

-- | Type representing identification of neighbourhoods.
data Neighbourhood
Neighbourhood :: NeighbourhoodId -> Text -> Neighbourhood
[nId] :: Neighbourhood -> NeighbourhoodId
[nName] :: Neighbourhood -> Text

-- | Type representing descriptions of a neighbourhood.
data NeighbourhoodDescription
NeighbourhoodDescription :: Text -> Maybe Text -> [Link] -> LatLng -> [ForceLocation] -> Text -> Text -> NeighbourhoodDescription
[nUrlForce] :: NeighbourhoodDescription -> Text
[nWelcomeMessage] :: NeighbourhoodDescription -> Maybe Text
[nLinks] :: NeighbourhoodDescription -> [Link]
[nCentre] :: NeighbourhoodDescription -> LatLng
[nLocations] :: NeighbourhoodDescription -> [ForceLocation]
[nPopulation] :: NeighbourhoodDescription -> Text
[nDescription] :: NeighbourhoodDescription -> Text

-- | Type representing identifiers for neighbourhoods.
newtype NeighbourhoodId
NeighbourhoodId :: Text -> NeighbourhoodId

-- | Type representing neighbourhood priorities.
data Priority
Priority :: Text -> Maybe LocalTime -> Maybe Text -> Maybe LocalTime -> Priority
[pIssue] :: Priority -> Text
[pIssueDate] :: Priority -> Maybe LocalTime
[pAction] :: Priority -> Maybe Text
[pActionDate] :: Priority -> Maybe LocalTime

-- | Type representing people, either senior officers or in a neighbourhood
--   team.
data Person
Person :: Text -> Maybe Text -> Maybe Text -> Maybe ContactDetails -> Person
[pName] :: Person -> Text
[pRank] :: Person -> Maybe Text
[pBio] :: Person -> Maybe Text
[pContactDetails] :: Person -> Maybe ContactDetails

-- | Type representing contact details.
data ContactDetails
ContactDetails :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ContactDetails
[cdEmail] :: ContactDetails -> Maybe Text
[cdTelephone] :: ContactDetails -> Maybe Text
[cdMobile] :: ContactDetails -> Maybe Text
[cdFax] :: ContactDetails -> Maybe Text
[cdWeb] :: ContactDetails -> Maybe Text
[cdAddress] :: ContactDetails -> Maybe Text
[cdFacebook] :: ContactDetails -> Maybe Text
[cdTwitter] :: ContactDetails -> Maybe Text
[cdYoutube] :: ContactDetails -> Maybe Text
[cdMyspace] :: ContactDetails -> Maybe Text
[cdBebo] :: ContactDetails -> Maybe Text
[cdFlickr] :: ContactDetails -> Maybe Text
[cdGooglePlus] :: ContactDetails -> Maybe Text
[cdForum] :: ContactDetails -> Maybe Text
[cdEMessaging] :: ContactDetails -> Maybe Text
[cdBlog] :: ContactDetails -> Maybe Text
[cdRss] :: ContactDetails -> Maybe Text

-- | Type representing engagement methods.
data EngagementMethod
EngagementMethod :: Text -> Text -> Text -> EngagementMethod
[emUrl] :: EngagementMethod -> Text
[emDescription] :: EngagementMethod -> Text
[emTitle] :: EngagementMethod -> Text

-- | Type representing links to information on the internet.
data Link
Link :: Text -> Text -> Maybe Text -> Link
[linkUrl] :: Link -> Text
[linkTitle] :: Link -> Text
[linkDescription] :: Link -> Maybe Text

-- | Type representing neighbourhood events.
data Event
Event :: Text -> Text -> Maybe Text -> Maybe ContactDetails -> Text -> LocalTime -> LocalTime -> Event
[eTitle] :: Event -> Text
[eType] :: Event -> Text
[eDescription] :: Event -> Maybe Text
[eContactDetails] :: Event -> Maybe ContactDetails
[eAddress] :: Event -> Text
[eStartDate] :: Event -> LocalTime
[eEndDate] :: Event -> LocalTime

-- | Type representing months for which reported crime is available and a
--   list of police forces providing stop and search information for the
--   month in question.
data DataAvailability
DataAvailability :: YearMonth -> [Force] -> DataAvailability
[dataDate] :: DataAvailability -> YearMonth
[dataStopAndSearch] :: DataAvailability -> [Force]

-- | Type representing crimes categories.
data CrimesCategory
AllCrime :: CrimesCategory
AntiSocialBehaviour :: CrimesCategory
BicycleTheft :: CrimesCategory
Burglary :: CrimesCategory
CriminalDamageArson :: CrimesCategory
Drugs :: CrimesCategory
OtherTheft :: CrimesCategory
PossessionOfWeapons :: CrimesCategory
PublicOrder :: CrimesCategory
Robbery :: CrimesCategory
Shoplifting :: CrimesCategory
TheftFromThePerson :: CrimesCategory
VehicleCrime :: CrimesCategory
ViolentCrime :: CrimesCategory
ViolenceAndSexualOffences :: CrimesCategory
OtherCrime :: CrimesCategory
UnknownCrimesCategory :: Text -> CrimesCategory

-- | Type representing identifiers and associated descriptions of crimes
--   categories.
data CrimesCategoryDescription
CrimesCategoryDescription :: CrimesCategory -> Text -> CrimesCategoryDescription
[ccUrl] :: CrimesCategoryDescription -> CrimesCategory
[ccName] :: CrimesCategoryDescription -> Text

-- | Type representing crime reports.
data Crime
Crime :: CrimesCategory -> Maybe LocationType -> Maybe Text -> Maybe StreetLocation -> Text -> Maybe PersistentId -> Integer -> YearMonth -> Crime
[cCategory] :: Crime -> CrimesCategory
[cLocationType] :: Crime -> Maybe LocationType
[cLocationSubtype] :: Crime -> Maybe Text
[cLocation] :: Crime -> Maybe StreetLocation
[cContext] :: Crime -> Text
[cPersistentId] :: Crime -> Maybe PersistentId
[cId] :: Crime -> Integer
[cMonth] :: Crime -> YearMonth

-- | Type representing persistent identifiers for UK crime reports.
newtype PersistentId
PersistentId :: Vector 64 Char -> PersistentId

-- | Type representing dates on which reported crime data was last updated.
newtype CrimeLastUpdated
CrimeLastUpdated :: Day -> CrimeLastUpdated
[cluDate] :: CrimeLastUpdated -> Day

-- | Type representing reported crimes and their associated outcomes.
data CrimesStreet
CrimesStreet :: Crime -> Maybe Outcome -> CrimesStreet

-- | Type representing outcomes for crime reports.
data Outcome
Outcome :: OutcomeCategory -> Maybe Int -> YearMonth -> Outcome
[oCategory] :: Outcome -> OutcomeCategory
[oPersonId] :: Outcome -> Maybe Int
[oMonth] :: Outcome -> YearMonth

-- | Type representing outcomes and associated crimes with a location.
data OutcomeAtLocation
OutcomeAtLocation :: Crime -> Outcome -> OutcomeAtLocation

-- | Type representing stops and searches
data Stop
Stop :: StopType -> Maybe Bool -> Maybe StreetLocation -> ZonedTime -> Maybe Gender -> Maybe StopAgeRange -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe StopOutcome -> Maybe StopOutcomeId -> Maybe Bool -> Stop
[ssType] :: Stop -> StopType
[ssRemovalOfMoreThanOuterClothing] :: Stop -> Maybe Bool
[ssLocation] :: Stop -> Maybe StreetLocation
[ssDatetime] :: Stop -> ZonedTime
[ssGender] :: Stop -> Maybe Gender
[ssAgeRange] :: Stop -> Maybe StopAgeRange
[ssSelfDefinedEthnicity] :: Stop -> Maybe Text
[ssOfficerDefinedEthnicity] :: Stop -> Maybe Text
[ssLegislation] :: Stop -> Maybe Text
[ssObjectOfSearch] :: Stop -> Maybe Text
[ssOperation] :: Stop -> Maybe Bool
[ssOperationName] :: Stop -> Maybe Text
[ssOutcome] :: Stop -> Maybe StopOutcome
[ssOutcomeId] :: Stop -> Maybe StopOutcomeId
[ssOutcomeLinkedToObjectOfSearch] :: Stop -> Maybe Bool

-- | Type representing the types of stops and searches.
data StopType
PersonSearch :: StopType
VehicleSearch :: StopType
PersonAndVehicleSearch :: StopType

-- | Type representing reported genders of people stopped and searched.
data Gender
Male :: Gender
Female :: Gender

-- | Type representing reported age ranges of people stopped and searched.
data StopAgeRange
Years10To17 :: StopAgeRange
Years18to24 :: StopAgeRange
Years25to34 :: StopAgeRange
Years35Plus :: StopAgeRange

-- | Type representing stop outcomes.
data StopOutcome
NoStopOutcome :: StopOutcome
NothingFound :: StopOutcome
StopOutcome :: Text -> StopOutcome

-- | Type representing stop and search outcomes
newtype StopOutcomeId
StopOutcomeId :: Text -> StopOutcomeId
instance GHC.Show.Show Web.UK.Police.Types.StopsForceResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.StopsForceResponse
instance GHC.Classes.Eq Web.UK.Police.Types.StopsForceResponse
instance GHC.Show.Show Web.UK.Police.Types.StopsNoLocationResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.StopsNoLocationResponse
instance GHC.Classes.Eq Web.UK.Police.Types.StopsNoLocationResponse
instance GHC.Show.Show Web.UK.Police.Types.StopsAtLocationResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.StopsAtLocationResponse
instance GHC.Classes.Eq Web.UK.Police.Types.StopsAtLocationResponse
instance GHC.Show.Show Web.UK.Police.Types.StopsStreetResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.StopsStreetResponse
instance GHC.Classes.Eq Web.UK.Police.Types.StopsStreetResponse
instance GHC.Show.Show Web.UK.Police.Types.Stop
instance GHC.Generics.Generic Web.UK.Police.Types.Stop
instance GHC.Show.Show Web.UK.Police.Types.StopOutcomeId
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.StopOutcomeId
instance GHC.Classes.Eq Web.UK.Police.Types.StopOutcomeId
instance GHC.Show.Show Web.UK.Police.Types.StopOutcome
instance GHC.Classes.Eq Web.UK.Police.Types.StopOutcome
instance GHC.Show.Show Web.UK.Police.Types.StopAgeRange
instance GHC.Classes.Eq Web.UK.Police.Types.StopAgeRange
instance GHC.Show.Show Web.UK.Police.Types.Gender
instance GHC.Classes.Eq Web.UK.Police.Types.Gender
instance GHC.Show.Show Web.UK.Police.Types.StopType
instance GHC.Classes.Eq Web.UK.Police.Types.StopType
instance GHC.Show.Show Web.UK.Police.Types.LocateNeighbourhoodResponse
instance GHC.Classes.Eq Web.UK.Police.Types.LocateNeighbourhoodResponse
instance GHC.Show.Show Web.UK.Police.Types.PrioritiesResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.PrioritiesResponse
instance GHC.Classes.Eq Web.UK.Police.Types.PrioritiesResponse
instance GHC.Show.Show Web.UK.Police.Types.Priority
instance GHC.Generics.Generic Web.UK.Police.Types.Priority
instance GHC.Classes.Eq Web.UK.Police.Types.Priority
instance GHC.Show.Show Web.UK.Police.Types.EventsResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.EventsResponse
instance GHC.Classes.Eq Web.UK.Police.Types.EventsResponse
instance GHC.Show.Show Web.UK.Police.Types.Event
instance GHC.Generics.Generic Web.UK.Police.Types.Event
instance GHC.Classes.Eq Web.UK.Police.Types.Event
instance GHC.Show.Show Web.UK.Police.Types.SeniorOfficersResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.SeniorOfficersResponse
instance GHC.Classes.Eq Web.UK.Police.Types.SeniorOfficersResponse
instance GHC.Show.Show Web.UK.Police.Types.PeopleResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.PeopleResponse
instance GHC.Classes.Eq Web.UK.Police.Types.PeopleResponse
instance GHC.Show.Show Web.UK.Police.Types.Person
instance GHC.Generics.Generic Web.UK.Police.Types.Person
instance GHC.Classes.Eq Web.UK.Police.Types.Person
instance GHC.Show.Show Web.UK.Police.Types.BoundaryResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.BoundaryResponse
instance GHC.Classes.Eq Web.UK.Police.Types.BoundaryResponse
instance GHC.Show.Show Web.UK.Police.Types.NeighbourhoodResponse
instance GHC.Classes.Eq Web.UK.Police.Types.NeighbourhoodResponse
instance GHC.Show.Show Web.UK.Police.Types.NeighbourhoodDescription
instance GHC.Generics.Generic Web.UK.Police.Types.NeighbourhoodDescription
instance GHC.Classes.Eq Web.UK.Police.Types.NeighbourhoodDescription
instance GHC.Show.Show Web.UK.Police.Types.ForceLocation
instance GHC.Generics.Generic Web.UK.Police.Types.ForceLocation
instance GHC.Classes.Eq Web.UK.Police.Types.ForceLocation
instance GHC.Show.Show Web.UK.Police.Types.Link
instance GHC.Generics.Generic Web.UK.Police.Types.Link
instance GHC.Classes.Eq Web.UK.Police.Types.Link
instance GHC.Show.Show Web.UK.Police.Types.NeighbourhoodsResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.NeighbourhoodsResponse
instance GHC.Classes.Eq Web.UK.Police.Types.NeighbourhoodsResponse
instance GHC.Show.Show Web.UK.Police.Types.Neighbourhood
instance GHC.Generics.Generic Web.UK.Police.Types.Neighbourhood
instance GHC.Classes.Eq Web.UK.Police.Types.Neighbourhood
instance Web.Internal.HttpApiData.ToHttpApiData Web.UK.Police.Types.NeighbourhoodId
instance GHC.Show.Show Web.UK.Police.Types.NeighbourhoodId
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.NeighbourhoodId
instance GHC.Classes.Eq Web.UK.Police.Types.NeighbourhoodId
instance GHC.Show.Show Web.UK.Police.Types.OutcomesForCrimeResponse
instance GHC.Classes.Eq Web.UK.Police.Types.OutcomesForCrimeResponse
instance GHC.Show.Show Web.UK.Police.Types.CrimeLastUpdatedResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.CrimeLastUpdatedResponse
instance GHC.Classes.Eq Web.UK.Police.Types.CrimeLastUpdatedResponse
instance GHC.Show.Show Web.UK.Police.Types.CrimeLastUpdated
instance GHC.Generics.Generic Web.UK.Police.Types.CrimeLastUpdated
instance GHC.Classes.Eq Web.UK.Police.Types.CrimeLastUpdated
instance GHC.Show.Show Web.UK.Police.Types.CrimesNoLocationResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.CrimesNoLocationResponse
instance GHC.Classes.Eq Web.UK.Police.Types.CrimesNoLocationResponse
instance GHC.Show.Show Web.UK.Police.Types.CrimesAtLocationResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.CrimesAtLocationResponse
instance GHC.Classes.Eq Web.UK.Police.Types.CrimesAtLocationResponse
instance GHC.Show.Show Web.UK.Police.Types.OutcomesAtLocationResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.OutcomesAtLocationResponse
instance GHC.Classes.Eq Web.UK.Police.Types.OutcomesAtLocationResponse
instance GHC.Show.Show Web.UK.Police.Types.OutcomeAtLocation
instance GHC.Classes.Eq Web.UK.Police.Types.OutcomeAtLocation
instance GHC.Show.Show Web.UK.Police.Types.CrimesStreetResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.CrimesStreetResponse
instance GHC.Classes.Eq Web.UK.Police.Types.CrimesStreetResponse
instance GHC.Show.Show Web.UK.Police.Types.CrimesStreet
instance GHC.Classes.Eq Web.UK.Police.Types.CrimesStreet
instance GHC.Show.Show Web.UK.Police.Types.Crime
instance GHC.Generics.Generic Web.UK.Police.Types.Crime
instance GHC.Classes.Eq Web.UK.Police.Types.Crime
instance GHC.Show.Show Web.UK.Police.Types.PersistentId
instance GHC.Classes.Eq Web.UK.Police.Types.PersistentId
instance GHC.Show.Show Web.UK.Police.Types.Outcome
instance GHC.Classes.Eq Web.UK.Police.Types.Outcome
instance GHC.Show.Show Web.UK.Police.Types.CrimeLocation
instance GHC.Classes.Eq Web.UK.Police.Types.CrimeLocation
instance GHC.Show.Show Web.UK.Police.Types.StreetLocation
instance GHC.Generics.Generic Web.UK.Police.Types.StreetLocation
instance GHC.Classes.Eq Web.UK.Police.Types.StreetLocation
instance GHC.Show.Show Web.UK.Police.Types.Street
instance GHC.Generics.Generic Web.UK.Police.Types.Street
instance GHC.Classes.Eq Web.UK.Police.Types.Street
instance Web.Internal.HttpApiData.ToHttpApiData Web.UK.Police.Types.LocationId
instance GHC.Show.Show Web.UK.Police.Types.LocationId
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.LocationId
instance GHC.Classes.Eq Web.UK.Police.Types.LocationId
instance GHC.Show.Show Web.UK.Police.Types.LocationType
instance GHC.Classes.Eq Web.UK.Police.Types.LocationType
instance GHC.Show.Show Web.UK.Police.Types.CrimeArea
instance GHC.Classes.Eq Web.UK.Police.Types.CrimeArea
instance GHC.Show.Show Web.UK.Police.Types.Poly
instance GHC.Classes.Eq Web.UK.Police.Types.Poly
instance GHC.Show.Show Web.UK.Police.Types.LatLng
instance GHC.Classes.Eq Web.UK.Police.Types.LatLng
instance GHC.Show.Show Web.UK.Police.Types.CrimesCategoriesResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.CrimesCategoriesResponse
instance GHC.Classes.Eq Web.UK.Police.Types.CrimesCategoriesResponse
instance GHC.Show.Show Web.UK.Police.Types.CrimesCategoryDescription
instance GHC.Generics.Generic Web.UK.Police.Types.CrimesCategoryDescription
instance GHC.Classes.Eq Web.UK.Police.Types.CrimesCategoryDescription
instance GHC.Show.Show Web.UK.Police.Types.ContactDetails
instance GHC.Generics.Generic Web.UK.Police.Types.ContactDetails
instance GHC.Classes.Eq Web.UK.Police.Types.ContactDetails
instance GHC.Show.Show Web.UK.Police.Types.ForceResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.ForceResponse
instance GHC.Classes.Eq Web.UK.Police.Types.ForceResponse
instance GHC.Show.Show Web.UK.Police.Types.ForceDescription
instance GHC.Generics.Generic Web.UK.Police.Types.ForceDescription
instance GHC.Classes.Eq Web.UK.Police.Types.ForceDescription
instance GHC.Show.Show Web.UK.Police.Types.EngagementMethod
instance GHC.Generics.Generic Web.UK.Police.Types.EngagementMethod
instance GHC.Classes.Eq Web.UK.Police.Types.EngagementMethod
instance GHC.Show.Show Web.UK.Police.Types.ForcesResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.ForcesResponse
instance GHC.Classes.Eq Web.UK.Police.Types.ForcesResponse
instance GHC.Show.Show Web.UK.Police.Types.ForceId
instance GHC.Generics.Generic Web.UK.Police.Types.ForceId
instance GHC.Classes.Eq Web.UK.Police.Types.ForceId
instance GHC.Show.Show Web.UK.Police.Types.DataAvailabilityResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.DataAvailabilityResponse
instance GHC.Classes.Eq Web.UK.Police.Types.DataAvailabilityResponse
instance GHC.Show.Show Web.UK.Police.Types.DataAvailability
instance GHC.Generics.Generic Web.UK.Police.Types.DataAvailability
instance GHC.Classes.Eq Web.UK.Police.Types.DataAvailability
instance GHC.Classes.Eq Web.UK.Police.Types.Force
instance GHC.Classes.Eq Web.UK.Police.Types.TForce
instance GHC.Classes.Eq Web.UK.Police.Types.Stop
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.Stop
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.StopOutcome
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.StopAgeRange
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.Gender
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.StopType
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.LocateNeighbourhoodResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.Priority
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.Event
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.Person
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.NeighbourhoodResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.ForceLocation
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.Link
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.Neighbourhood
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.OutcomesForCrimeResponse
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.CrimeLastUpdated
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.OutcomeAtLocation
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.CrimesStreet
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.Crime
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.PersistentId
instance Web.Internal.HttpApiData.ToHttpApiData Web.UK.Police.Types.PersistentId
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.Outcome
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.StreetLocation
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.Street
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.LocationType
instance Web.Internal.HttpApiData.ToHttpApiData Web.UK.Police.Types.Poly
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.LatLng
instance Web.Internal.HttpApiData.ToHttpApiData Web.UK.Police.Types.LatLng
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.CrimesCategoryDescription
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.ContactDetails
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.ForceDescription
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.EngagementMethod
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.ForceId
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.DataAvailability
instance GHC.Show.Show Web.UK.Police.Types.Force
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.Force
instance Web.Internal.HttpApiData.ToHttpApiData Web.UK.Police.Types.Force
instance GHC.Show.Show Web.UK.Police.Types.TForce
instance Data.Aeson.Types.FromJSON.FromJSON Web.UK.Police.Types.TForce
instance Web.Internal.HttpApiData.ToHttpApiData Web.UK.Police.Types.TForce


-- | This module exports types and functions used to implement bindings to
--   the UK Home Office's Police API.
--   
--   The following is an example application using the API.
--   
--   <pre>
--   module Main where
--   
--   import Data.Either (rights)
--   import System.Environment (getArgs)
--   
--   import Data.Text (pack)
--   import Data.Text.Read (double)
--   import Network.HTTP.Client (newManager)
--   import Network.HTTP.Client.TLS (tlsManagerSettings)
--   
--   import Web.UK.Police
--   
--   main :: IO ()
--   main = do
--     args &lt;- getArgs
--     let ll = CrimeLatLng $ coord args
--     mgr &lt;- newManager tlsManagerSettings
--     crimesStreetDates mgr &gt;&gt;= \case
--       Right result -&gt; do
--         let ms = availableMonths result
--         clrs &lt;- rights &lt;$&gt; mapM (crimesAtLocation mgr ll . Just) ms
--         let css = concatMap (\(CrimesAtLocationResponse cs) -&gt; cs) clrs
--             crimes = map (\(CrimesStreet crime _) -&gt; crime) css
--             ccs = map (\c -&gt; ( cMonth c
--                              , cCategory c
--                              , streetName . slStreet &lt;$&gt; cLocation c)) crimes
--         mapM_ print ccs
--       _ -&gt; pure ()
--    where
--     coord args = let coord' n = either undefined fst $ double $ pack $ args!!n
--                  in  LatLng (coord' 0) (coord' 1)
--   </pre>
module Web.UK.Police

-- | Returns a list of available data sets.
crimesStreetDates :: Manager -> IO (Either ClientError DataAvailabilityResponse)

-- | When the crime data was last updated.
crimeLastUpdated :: Manager -> IO (Either ClientError CrimeLastUpdatedResponse)

-- | A list of all the police forces available via the API.
forces :: Manager -> IO (Either ClientError ForcesResponse)

-- | Returns information about a specific police force.
force :: Manager -> TForce -> IO (Either ClientError ForceResponse)

-- | Returns a list of the senior officers for a given police force.
seniorOfficers :: Manager -> TForce -> IO (Either ClientError SeniorOfficersResponse)

-- | Returns a list of valid neighbourhood identifiers and names for a
--   given police force.
neighbourhoods :: Manager -> TForce -> IO (Either ClientError NeighbourhoodsResponse)

-- | Returns a description of a given neighbourhood.
neighbourhood :: Manager -> TForce -> NeighbourhoodId -> IO (Either ClientError NeighbourhoodResponse)

-- | Returns a list of latitude/longitude pairs that make up the boundary
--   of a given neigbourhood.
boundary :: Manager -> TForce -> NeighbourhoodId -> IO (Either ClientError BoundaryResponse)

-- | Returns a list of members of team for a given neighbourhood.
people :: Manager -> TForce -> NeighbourhoodId -> IO (Either ClientError PeopleResponse)

-- | Returns a list of future events for a given neighbourhood.
events :: Manager -> TForce -> NeighbourhoodId -> IO (Either ClientError EventsResponse)

-- | Returns a list of priorities for a given neighbourhood.
priorities :: Manager -> TForce -> NeighbourhoodId -> IO (Either ClientError PrioritiesResponse)

-- | Find the neighbourhood policing team responsible for a particular
--   area.
locateNeighbourhood :: Manager -> LatLng -> IO (Either ClientError LocateNeighbourhoodResponse)

-- | Returns a list of valid categories for a given data set date.
crimesCategories :: Manager -> Maybe YearMonth -> IO (Either ClientError CrimesCategoriesResponse)

-- | Crimes at street-level; either within a 1 mile radius of a single
--   point, or within a custom area.
crimesStreet :: Manager -> CrimesCategory -> CrimeArea -> Maybe YearMonth -> IO (Either ClientError CrimesStreetResponse)

-- | Returns just the crimes which occurred at the specified location,
--   rather than those within a radius. If given latitude and longitude,
--   finds the nearest pre-defined location and returns the crimes which
--   occurred there.
crimesAtLocation :: Manager -> CrimeLocation -> Maybe YearMonth -> IO (Either ClientError CrimesAtLocationResponse)

-- | Returns a list of crimes that could not be mapped to a location.
crimesNoLocation :: Manager -> CrimesCategory -> Force -> Maybe YearMonth -> IO (Either ClientError CrimesNoLocationResponse)

-- | Outcomes at street-level, at a specific location.
outcomesStreet :: Manager -> LocationId -> Maybe YearMonth -> IO (Either ClientError OutcomesAtLocationResponse)

-- | Outcomes at street-level; either within a 1 mile radius of a single
--   point, or within a custom area.
outcomesAtLocation :: Manager -> CrimeArea -> Maybe YearMonth -> IO (Either ClientError OutcomesAtLocationResponse)

-- | Returns the outcomes (case history) for the specified crime.
outcomesForCrime :: Manager -> PersistentId -> IO (Either ClientError OutcomesForCrimeResponse)

-- | Stop and searches at street-level; either within a 1 mile radius of a
--   single point, or within a custom area.
stopsStreet :: Manager -> CrimeArea -> Maybe YearMonth -> IO (Either ClientError StopsStreetResponse)

-- | Stop and searches at a particular location.
stopsAtLocation :: Manager -> LocationId -> Maybe YearMonth -> IO (Either ClientError StopsAtLocationResponse)

-- | Stop and searches that could not be mapped to a location.
stopsNoLocation :: Manager -> Force -> Maybe YearMonth -> IO (Either ClientError StopsNoLocationResponse)

-- | Stop and searches reported by a particular force.
stopsForce :: Manager -> Force -> Maybe YearMonth -> IO (Either ClientError StopsForceResponse)

-- | Returns a sorted list of months for which data is available, given a
--   <a>DataAvailabilityResponse</a>.
availableMonths :: DataAvailabilityResponse -> [YearMonth]

-- | Returns a sorted list of months for which stop and search data is
--   available, given a <a>DataAvailabilityResponse</a> and a participating
--   police force.
availableStopAndSearch :: DataAvailabilityResponse -> Force -> [YearMonth]

-- | Attempts to cast a police force to a territorial police force.
tForce :: Force -> Maybe TForce

-- | Type representing the UK Home Office's Police API.
type UKPoliceAPI = "crimes-street-dates" :> Get '[JSON] DataAvailabilityResponse :<|> "forces" :> Get '[JSON] ForcesResponse :<|> "forces" :> Capture "force" TForce :> Get '[JSON] ForceResponse :<|> "forces" :> Capture "force" TForce :> "people" :> Get '[JSON] SeniorOfficersResponse :<|> "crimes-street" :> Capture "crime-category" CrimesCategory :> QueryParam "lat" Double :> QueryParam "lng" Double :> QueryParam "poly" Poly :> QueryParam "date" YearMonth :> Get '[JSON] CrimesStreetResponse :<|> "outcomes-at-location" :> QueryParam "location_id" LocationId :> QueryParam "lat" Double :> QueryParam "lng" Double :> QueryParam "poly" Poly :> QueryParam "date" YearMonth :> Get '[JSON] OutcomesAtLocationResponse :<|> "crimes-at-location" :> QueryParam "location_id" LocationId :> QueryParam "lat" Double :> QueryParam "lng" Double :> QueryParam "date" YearMonth :> Get '[JSON] CrimesAtLocationResponse :<|> "crimes-no-location" :> QueryParam "category" CrimesCategory :> QueryParam "force" Force :> QueryParam "date" YearMonth :> Get '[JSON] CrimesNoLocationResponse :<|> "crime-categories" :> QueryParam "date" YearMonth :> Get '[JSON] CrimesCategoriesResponse :<|> "crime-last-updated" :> Get '[JSON] CrimeLastUpdatedResponse :<|> "outcomes-for-crime" :> Capture "peristent_id" PersistentId :> Get '[JSON] OutcomesForCrimeResponse :<|> Capture "force" TForce :> "neighbourhoods" :> Get '[JSON] NeighbourhoodsResponse :<|> Capture "force" TForce :> Capture "neighbourhood_id" NeighbourhoodId :> Get '[JSON] NeighbourhoodResponse :<|> Capture "force" TForce :> Capture "neighbourhood_id" NeighbourhoodId :> "boundary" :> Get '[JSON] BoundaryResponse :<|> Capture "force" TForce :> Capture "neighbourhood_id" NeighbourhoodId :> "people" :> Get '[JSON] PeopleResponse :<|> Capture "force" TForce :> Capture "neighbourhood_id" NeighbourhoodId :> "events" :> Get '[JSON] EventsResponse :<|> Capture "force" TForce :> Capture "neighbourhood_id" NeighbourhoodId :> "priorities" :> Get '[JSON] PrioritiesResponse :<|> "locate-neighbourhood" :> QueryParam "q" LatLng :> Get '[JSON] LocateNeighbourhoodResponse :<|> "stops-street" :> QueryParam "lat" Double :> QueryParam "lng" Double :> QueryParam "poly" Poly :> QueryParam "date" YearMonth :> Get '[JSON] StopsStreetResponse :<|> "stops-at-location" :> QueryParam "location_id" LocationId :> QueryParam "date" YearMonth :> Get '[JSON] StopsAtLocationResponse :<|> "stops-no-location" :> QueryParam "force" Force :> QueryParam "date" YearMonth :> Get '[JSON] StopsNoLocationResponse :<|> "stops-force" :> QueryParam "force" Force :> QueryParam "date" YearMonth :> Get '[JSON] StopsForceResponse

-- | The api.
api :: Proxy UKPoliceAPI

-- | Type representing the response to an end point of the API.
newtype DataAvailabilityResponse
DataAvailabilityResponse :: [DataAvailability] -> DataAvailabilityResponse

-- | Type representing the response to an end point of the API.
newtype CrimeLastUpdatedResponse
CrimeLastUpdatedResponse :: CrimeLastUpdated -> CrimeLastUpdatedResponse

-- | Type representing the response to an end point of the API.
newtype ForcesResponse
ForcesResponse :: [ForceId] -> ForcesResponse

-- | Type representing the response to an end point of the API.
newtype ForceResponse
ForceResponse :: ForceDescription -> ForceResponse

-- | Type representing the response to an end point of the API.
newtype SeniorOfficersResponse
SeniorOfficersResponse :: [Person] -> SeniorOfficersResponse

-- | Type representing the response to an end point of the API.
newtype NeighbourhoodsResponse
NeighbourhoodsResponse :: [Neighbourhood] -> NeighbourhoodsResponse

-- | Type representing the response to an end point of the API.
data NeighbourhoodResponse
NeighbourhoodResponse :: Neighbourhood -> NeighbourhoodDescription -> Maybe ContactDetails -> NeighbourhoodResponse

-- | Type representing the response to an end point of the API.
newtype BoundaryResponse
BoundaryResponse :: [LatLng] -> BoundaryResponse

-- | Type representing the response to an end point of the API.
newtype PeopleResponse
PeopleResponse :: [Person] -> PeopleResponse

-- | Type representing the response to an end point of the API.
newtype EventsResponse
EventsResponse :: [Event] -> EventsResponse

-- | Type representing the response to an end point of the API.
newtype PrioritiesResponse
PrioritiesResponse :: [Priority] -> PrioritiesResponse

-- | Type representing the response to an end point of the API.
data LocateNeighbourhoodResponse
LocateNeighbourhoodResponse :: Force -> NeighbourhoodId -> LocateNeighbourhoodResponse

-- | Type representing the response to an end point of the API.
newtype CrimesCategoriesResponse
CrimesCategoriesResponse :: [CrimesCategoryDescription] -> CrimesCategoriesResponse

-- | Type representing the response to an end point of the API.
newtype CrimesStreetResponse
CrimesStreetResponse :: [CrimesStreet] -> CrimesStreetResponse

-- | Type representing the response to an end point of the API.
newtype CrimesAtLocationResponse
CrimesAtLocationResponse :: [CrimesStreet] -> CrimesAtLocationResponse

-- | Type representing the response to an end point of the API.
newtype CrimesNoLocationResponse
CrimesNoLocationResponse :: [CrimesStreet] -> CrimesNoLocationResponse

-- | Type representing the response to an end point of the API.
newtype OutcomesAtLocationResponse
OutcomesAtLocationResponse :: [OutcomeAtLocation] -> OutcomesAtLocationResponse

-- | Type representing the response to an end point of the API.
data OutcomesForCrimeResponse
OutcomesForCrimeResponse :: Crime -> [Outcome] -> OutcomesForCrimeResponse

-- | Type representing the response to an end point of the API.
newtype StopsStreetResponse
StopsStreetResponse :: [Stop] -> StopsStreetResponse

-- | Type representing the response to an end point of the API.
newtype StopsAtLocationResponse
StopsAtLocationResponse :: [Stop] -> StopsAtLocationResponse

-- | Type representing the response to an end point of the API.
newtype StopsNoLocationResponse
StopsNoLocationResponse :: [Stop] -> StopsNoLocationResponse

-- | Type representing the response to an end point of the API.
newtype StopsForceResponse
StopsForceResponse :: [Stop] -> StopsForceResponse

-- | Type representing months in the Gregorian calander.
newtype YearMonth
YearMonth :: (Integer, Int) -> YearMonth

-- | Type representing areas used to obtain crime reports
data CrimeArea

-- | Centre of a circle of radius 1 mile
CrimeCentre :: LatLng -> CrimeArea

-- | Custom area
CrimePoly :: Poly -> CrimeArea

-- | Type representing location used to obtain crime reports
data CrimeLocation
CrimeLocation :: LocationId -> CrimeLocation
CrimeLatLng :: LatLng -> CrimeLocation

-- | Type representing latitude and longitude coordinates
data LatLng
LatLng :: Double -> Double -> LatLng
[lat] :: LatLng -> Double
[lng] :: LatLng -> Double

-- | Type representing boundaries of regions
newtype Poly
Poly :: [LatLng] -> Poly

-- | Type representing identifiers for anonymised locations
newtype LocationId
LocationId :: Int -> LocationId

-- | Type representing types of locations.
data LocationType
LTForce :: LocationType
LTBTP :: LocationType
UnknownLocationType :: Text -> LocationType

-- | Type representing streets
data Street
Street :: LocationId -> Text -> Street
[streetId] :: Street -> LocationId
[streetName] :: Street -> Text

-- | Type representating streets and their locations
data StreetLocation
StreetLocation :: LatLng -> Street -> StreetLocation
[slLatLng] :: StreetLocation -> LatLng
[slStreet] :: StreetLocation -> Street

-- | Type representing locations of police.
data ForceLocation
ForceLocation :: Text -> Text -> Maybe Text -> Maybe LatLng -> Text -> Text -> ForceLocation
[flName] :: ForceLocation -> Text
[flType] :: ForceLocation -> Text
[flDescription] :: ForceLocation -> Maybe Text
[flLocation] :: ForceLocation -> Maybe LatLng
[flAddress] :: ForceLocation -> Text
[flPostcode] :: ForceLocation -> Text

-- | Type representing participating UK police forces
data Force

-- | Territorial police force
TF :: TForce -> Force

-- | British Transport Police
BTP :: Force

-- | Type representing participating UK territorial police forces
data TForce

-- | Territorial police force in England and Wales
EW :: EWTForce -> TForce

-- | Police Service of Northern Ireland
NorthernIreland :: TForce

-- | Type representing territorial police forces in England and Wales.
--   There is a nullary data constructor for each of the 43 territorial
--   police forces.
data EWTForce
AvonAndSomerset :: EWTForce
Bedfordshire :: EWTForce
Cambridgeshire :: EWTForce
Cheshire :: EWTForce
CityOfLondon :: EWTForce
Cleveland :: EWTForce
Cumbria :: EWTForce
Derbyshire :: EWTForce
DevonAndCornwall :: EWTForce
Dorset :: EWTForce
Durham :: EWTForce
DyfedPowys :: EWTForce
Essex :: EWTForce
Gloucestershire :: EWTForce
GreaterManchester :: EWTForce
Gwent :: EWTForce
Hampshire :: EWTForce
Hertfordshire :: EWTForce
Humberside :: EWTForce
Kent :: EWTForce
Lancashire :: EWTForce
Leicestershire :: EWTForce
Lincolnshire :: EWTForce
Merseyside :: EWTForce
Metropolitan :: EWTForce
Norfolk :: EWTForce
NorthWales :: EWTForce
NorthYorkshire :: EWTForce
Northamptonshire :: EWTForce
Northumbria :: EWTForce
Nottinghamshire :: EWTForce
SouthWales :: EWTForce
SouthYorkshire :: EWTForce
Staffordshire :: EWTForce
Suffolk :: EWTForce
Surrey :: EWTForce
Sussex :: EWTForce
ThamesValley :: EWTForce
Warwickshire :: EWTForce
WestMercia :: EWTForce
WestMidlands :: EWTForce
WestYorkshire :: EWTForce
Wiltshire :: EWTForce

-- | Type representing identifiers and associated names of police forces.
data ForceId
ForceId :: Force -> Text -> ForceId
[forceId] :: ForceId -> Force
[forceName] :: ForceId -> Text

-- | Type representing descriptions of police forces.
data ForceDescription
ForceDescription :: Force -> Text -> Maybe Text -> Text -> Text -> Maybe [EngagementMethod] -> ForceDescription
[fdId] :: ForceDescription -> Force
[fdName] :: ForceDescription -> Text
[fdDescription] :: ForceDescription -> Maybe Text
[fdUrl] :: ForceDescription -> Text
[fdTelephone] :: ForceDescription -> Text
[fdEngagementMethods] :: ForceDescription -> Maybe [EngagementMethod]

-- | Type representing identification of neighbourhoods.
data Neighbourhood
Neighbourhood :: NeighbourhoodId -> Text -> Neighbourhood
[nId] :: Neighbourhood -> NeighbourhoodId
[nName] :: Neighbourhood -> Text

-- | Type representing descriptions of a neighbourhood.
data NeighbourhoodDescription
NeighbourhoodDescription :: Text -> Maybe Text -> [Link] -> LatLng -> [ForceLocation] -> Text -> Text -> NeighbourhoodDescription
[nUrlForce] :: NeighbourhoodDescription -> Text
[nWelcomeMessage] :: NeighbourhoodDescription -> Maybe Text
[nLinks] :: NeighbourhoodDescription -> [Link]
[nCentre] :: NeighbourhoodDescription -> LatLng
[nLocations] :: NeighbourhoodDescription -> [ForceLocation]
[nPopulation] :: NeighbourhoodDescription -> Text
[nDescription] :: NeighbourhoodDescription -> Text

-- | Type representing identifiers for neighbourhoods.
newtype NeighbourhoodId
NeighbourhoodId :: Text -> NeighbourhoodId

-- | Type representing neighbourhood priorities.
data Priority
Priority :: Text -> Maybe LocalTime -> Maybe Text -> Maybe LocalTime -> Priority
[pIssue] :: Priority -> Text
[pIssueDate] :: Priority -> Maybe LocalTime
[pAction] :: Priority -> Maybe Text
[pActionDate] :: Priority -> Maybe LocalTime

-- | Type representing people, either senior officers or in a neighbourhood
--   team.
data Person
Person :: Text -> Maybe Text -> Maybe Text -> Maybe ContactDetails -> Person
[pName] :: Person -> Text
[pRank] :: Person -> Maybe Text
[pBio] :: Person -> Maybe Text
[pContactDetails] :: Person -> Maybe ContactDetails

-- | Type representing contact details.
data ContactDetails
ContactDetails :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ContactDetails
[cdEmail] :: ContactDetails -> Maybe Text
[cdTelephone] :: ContactDetails -> Maybe Text
[cdMobile] :: ContactDetails -> Maybe Text
[cdFax] :: ContactDetails -> Maybe Text
[cdWeb] :: ContactDetails -> Maybe Text
[cdAddress] :: ContactDetails -> Maybe Text
[cdFacebook] :: ContactDetails -> Maybe Text
[cdTwitter] :: ContactDetails -> Maybe Text
[cdYoutube] :: ContactDetails -> Maybe Text
[cdMyspace] :: ContactDetails -> Maybe Text
[cdBebo] :: ContactDetails -> Maybe Text
[cdFlickr] :: ContactDetails -> Maybe Text
[cdGooglePlus] :: ContactDetails -> Maybe Text
[cdForum] :: ContactDetails -> Maybe Text
[cdEMessaging] :: ContactDetails -> Maybe Text
[cdBlog] :: ContactDetails -> Maybe Text
[cdRss] :: ContactDetails -> Maybe Text

-- | Type representing engagement methods.
data EngagementMethod
EngagementMethod :: Text -> Text -> Text -> EngagementMethod
[emUrl] :: EngagementMethod -> Text
[emDescription] :: EngagementMethod -> Text
[emTitle] :: EngagementMethod -> Text

-- | Type representing links to information on the internet.
data Link
Link :: Text -> Text -> Maybe Text -> Link
[linkUrl] :: Link -> Text
[linkTitle] :: Link -> Text
[linkDescription] :: Link -> Maybe Text

-- | Type representing neighbourhood events.
data Event
Event :: Text -> Text -> Maybe Text -> Maybe ContactDetails -> Text -> LocalTime -> LocalTime -> Event
[eTitle] :: Event -> Text
[eType] :: Event -> Text
[eDescription] :: Event -> Maybe Text
[eContactDetails] :: Event -> Maybe ContactDetails
[eAddress] :: Event -> Text
[eStartDate] :: Event -> LocalTime
[eEndDate] :: Event -> LocalTime

-- | Type representing months for which reported crime is available and a
--   list of police forces providing stop and search information for the
--   month in question.
data DataAvailability
DataAvailability :: YearMonth -> [Force] -> DataAvailability
[dataDate] :: DataAvailability -> YearMonth
[dataStopAndSearch] :: DataAvailability -> [Force]

-- | Type representing crimes categories.
data CrimesCategory
AllCrime :: CrimesCategory
AntiSocialBehaviour :: CrimesCategory
BicycleTheft :: CrimesCategory
Burglary :: CrimesCategory
CriminalDamageArson :: CrimesCategory
Drugs :: CrimesCategory
OtherTheft :: CrimesCategory
PossessionOfWeapons :: CrimesCategory
PublicOrder :: CrimesCategory
Robbery :: CrimesCategory
Shoplifting :: CrimesCategory
TheftFromThePerson :: CrimesCategory
VehicleCrime :: CrimesCategory
ViolentCrime :: CrimesCategory
ViolenceAndSexualOffences :: CrimesCategory
OtherCrime :: CrimesCategory
UnknownCrimesCategory :: Text -> CrimesCategory

-- | Type representing identifiers and associated descriptions of crimes
--   categories.
data CrimesCategoryDescription
CrimesCategoryDescription :: CrimesCategory -> Text -> CrimesCategoryDescription
[ccUrl] :: CrimesCategoryDescription -> CrimesCategory
[ccName] :: CrimesCategoryDescription -> Text

-- | Type representing crime reports.
data Crime
Crime :: CrimesCategory -> Maybe LocationType -> Maybe Text -> Maybe StreetLocation -> Text -> Maybe PersistentId -> Integer -> YearMonth -> Crime
[cCategory] :: Crime -> CrimesCategory
[cLocationType] :: Crime -> Maybe LocationType
[cLocationSubtype] :: Crime -> Maybe Text
[cLocation] :: Crime -> Maybe StreetLocation
[cContext] :: Crime -> Text
[cPersistentId] :: Crime -> Maybe PersistentId
[cId] :: Crime -> Integer
[cMonth] :: Crime -> YearMonth

-- | Type representing persistent identifiers for UK crime reports.
newtype PersistentId
PersistentId :: Vector 64 Char -> PersistentId

-- | Type representing dates on which reported crime data was last updated.
newtype CrimeLastUpdated
CrimeLastUpdated :: Day -> CrimeLastUpdated
[cluDate] :: CrimeLastUpdated -> Day

-- | Type representing reported crimes and their associated outcomes.
data CrimesStreet
CrimesStreet :: Crime -> Maybe Outcome -> CrimesStreet

-- | Type representing outcomes for crime reports.
data Outcome
Outcome :: OutcomeCategory -> Maybe Int -> YearMonth -> Outcome
[oCategory] :: Outcome -> OutcomeCategory
[oPersonId] :: Outcome -> Maybe Int
[oMonth] :: Outcome -> YearMonth

-- | Type representing outcomes and associated crimes with a location.
data OutcomeAtLocation
OutcomeAtLocation :: Crime -> Outcome -> OutcomeAtLocation

-- | Type representing stops and searches
data Stop
Stop :: StopType -> Maybe Bool -> Maybe StreetLocation -> ZonedTime -> Maybe Gender -> Maybe StopAgeRange -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe StopOutcome -> Maybe StopOutcomeId -> Maybe Bool -> Stop
[ssType] :: Stop -> StopType
[ssRemovalOfMoreThanOuterClothing] :: Stop -> Maybe Bool
[ssLocation] :: Stop -> Maybe StreetLocation
[ssDatetime] :: Stop -> ZonedTime
[ssGender] :: Stop -> Maybe Gender
[ssAgeRange] :: Stop -> Maybe StopAgeRange
[ssSelfDefinedEthnicity] :: Stop -> Maybe Text
[ssOfficerDefinedEthnicity] :: Stop -> Maybe Text
[ssLegislation] :: Stop -> Maybe Text
[ssObjectOfSearch] :: Stop -> Maybe Text
[ssOperation] :: Stop -> Maybe Bool
[ssOperationName] :: Stop -> Maybe Text
[ssOutcome] :: Stop -> Maybe StopOutcome
[ssOutcomeId] :: Stop -> Maybe StopOutcomeId
[ssOutcomeLinkedToObjectOfSearch] :: Stop -> Maybe Bool

-- | Type representing the types of stops and searches.
data StopType
PersonSearch :: StopType
VehicleSearch :: StopType
PersonAndVehicleSearch :: StopType

-- | Type representing reported genders of people stopped and searched.
data Gender
Male :: Gender
Female :: Gender

-- | Type representing reported age ranges of people stopped and searched.
data StopAgeRange
Years10To17 :: StopAgeRange
Years18to24 :: StopAgeRange
Years25to34 :: StopAgeRange
Years35Plus :: StopAgeRange

-- | Type representing stop outcomes.
data StopOutcome
NoStopOutcome :: StopOutcome
NothingFound :: StopOutcome
StopOutcome :: Text -> StopOutcome

-- | Type representing stop and search outcomes
newtype StopOutcomeId
StopOutcomeId :: Text -> StopOutcomeId
